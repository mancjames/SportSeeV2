// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportSeeV2.Server.Data;

#nullable disable

namespace SportSeeV2.Server.Migrations
{
    [DbContext(typeof(SportSeeDbContext))]
    [Migration("20240531163820_updated-user-activity-model")]
    partial class updateduseractivitymodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("SportSeeV2.Server.Data.ActivitySessionEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserActivityEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("calories")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("day")
                        .HasColumnType("TEXT");

                    b.Property<int>("kilogram")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("UserActivityEntityId");

                    b.ToTable("ActivitySessionEntity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            UserActivityEntityId = 1,
                            calories = 240,
                            day = new DateOnly(2020, 7, 1),
                            kilogram = 80
                        },
                        new
                        {
                            id = 2,
                            UserActivityEntityId = 1,
                            calories = 220,
                            day = new DateOnly(2020, 7, 2),
                            kilogram = 80
                        },
                        new
                        {
                            id = 3,
                            UserActivityEntityId = 1,
                            calories = 280,
                            day = new DateOnly(2020, 7, 3),
                            kilogram = 81
                        },
                        new
                        {
                            id = 4,
                            UserActivityEntityId = 1,
                            calories = 290,
                            day = new DateOnly(2020, 7, 4),
                            kilogram = 81
                        },
                        new
                        {
                            id = 5,
                            UserActivityEntityId = 1,
                            calories = 160,
                            day = new DateOnly(2020, 7, 5),
                            kilogram = 80
                        },
                        new
                        {
                            id = 6,
                            UserActivityEntityId = 1,
                            calories = 162,
                            day = new DateOnly(2020, 7, 6),
                            kilogram = 78
                        },
                        new
                        {
                            id = 7,
                            UserActivityEntityId = 1,
                            calories = 390,
                            day = new DateOnly(2020, 7, 7),
                            kilogram = 76
                        },
                        new
                        {
                            id = 8,
                            UserActivityEntityId = 2,
                            calories = 240,
                            day = new DateOnly(2020, 7, 1),
                            kilogram = 70
                        },
                        new
                        {
                            id = 9,
                            UserActivityEntityId = 2,
                            calories = 220,
                            day = new DateOnly(2020, 7, 2),
                            kilogram = 69
                        },
                        new
                        {
                            id = 10,
                            UserActivityEntityId = 2,
                            calories = 280,
                            day = new DateOnly(2020, 7, 3),
                            kilogram = 70
                        },
                        new
                        {
                            id = 11,
                            UserActivityEntityId = 2,
                            calories = 500,
                            day = new DateOnly(2020, 7, 4),
                            kilogram = 70
                        },
                        new
                        {
                            id = 12,
                            UserActivityEntityId = 2,
                            calories = 160,
                            day = new DateOnly(2020, 7, 5),
                            kilogram = 69
                        },
                        new
                        {
                            id = 13,
                            UserActivityEntityId = 2,
                            calories = 162,
                            day = new DateOnly(2020, 7, 6),
                            kilogram = 69
                        },
                        new
                        {
                            id = 14,
                            UserActivityEntityId = 2,
                            calories = 390,
                            day = new DateOnly(2020, 7, 7),
                            kilogram = 69
                        });
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.KeyDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CalorieCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarbohydrateCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LipidCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProteinCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserMainEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserMainEntityId")
                        .IsUnique();

                    b.ToTable("KeyDataEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CalorieCount = 1930,
                            CarbohydrateCount = 290,
                            LipidCount = 50,
                            ProteinCount = 155,
                            UserMainEntityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CalorieCount = 2500,
                            CarbohydrateCount = 150,
                            LipidCount = 120,
                            ProteinCount = 90,
                            UserMainEntityId = 2
                        });
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.UserActivityEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserMainEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("UserMainEntityId");

                    b.ToTable("UserActivityEntity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            UserMainEntityId = 1
                        },
                        new
                        {
                            id = 2,
                            UserMainEntityId = 2
                        });
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.UserInfosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserMainEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserMainEntityId")
                        .IsUnique();

                    b.ToTable("UserInfosEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 31,
                            FirstName = "Karl",
                            LastName = "Dovineau",
                            UserMainEntityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 34,
                            FirstName = "Cecilia",
                            LastName = "Ratorez",
                            UserMainEntityId = 2
                        });
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.UserMainEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("TodayScore")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("UserMainEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TodayScore = 0.12f
                        },
                        new
                        {
                            Id = 2,
                            TodayScore = 0.3f
                        });
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.ActivitySessionEntity", b =>
                {
                    b.HasOne("SportSeeV2.Server.Data.UserActivityEntity", "UserActivityEntity")
                        .WithMany("ActivitySessions")
                        .HasForeignKey("UserActivityEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserActivityEntity");
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.KeyDataEntity", b =>
                {
                    b.HasOne("SportSeeV2.Server.Data.UserMainEntity", "UserMainEntity")
                        .WithOne("KeyData")
                        .HasForeignKey("SportSeeV2.Server.Data.KeyDataEntity", "UserMainEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMainEntity");
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.UserActivityEntity", b =>
                {
                    b.HasOne("SportSeeV2.Server.Data.UserMainEntity", "UserMainEntity")
                        .WithMany()
                        .HasForeignKey("UserMainEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMainEntity");
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.UserInfosEntity", b =>
                {
                    b.HasOne("SportSeeV2.Server.Data.UserMainEntity", "UserMainEntity")
                        .WithOne("UserInfos")
                        .HasForeignKey("SportSeeV2.Server.Data.UserInfosEntity", "UserMainEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMainEntity");
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.UserActivityEntity", b =>
                {
                    b.Navigation("ActivitySessions");
                });

            modelBuilder.Entity("SportSeeV2.Server.Data.UserMainEntity", b =>
                {
                    b.Navigation("KeyData")
                        .IsRequired();

                    b.Navigation("UserInfos")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
